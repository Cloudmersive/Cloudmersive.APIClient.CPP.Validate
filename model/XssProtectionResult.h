/**
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.11.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * XssProtectionResult.h
 *
 * Result of performing an XSS protection operation
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_XssProtectionResult_H_
#define IO_SWAGGER_CLIENT_MODEL_XssProtectionResult_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Result of performing an XSS protection operation
/// </summary>
class  XssProtectionResult
    : public ModelBase
{
public:
    XssProtectionResult();
    virtual ~XssProtectionResult();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// XssProtectionResult members

    /// <summary>
    /// True if the operation was successful, false otherwise
    /// </summary>
    bool isSuccessful() const;
    bool successfulIsSet() const;
    void unsetSuccessful();
    void setSuccessful(bool value);
    /// <summary>
    /// True if the input contained XSS scripting, false otherwise
    /// </summary>
    bool isContainedXss() const;
    bool containedXssIsSet() const;
    void unsetContainedXss();
    void setContainedXss(bool value);
    /// <summary>
    /// Original input string
    /// </summary>
    utility::string_t getOriginalInput() const;
    bool originalInputIsSet() const;
    void unsetOriginalInput();
    void setOriginalInput(utility::string_t value);
    /// <summary>
    /// Normalized string result, with XSS removed
    /// </summary>
    utility::string_t getNormalizedResult() const;
    bool normalizedResultIsSet() const;
    void unsetNormalizedResult();
    void setNormalizedResult(utility::string_t value);

protected:
    bool m_Successful;
    bool m_SuccessfulIsSet;
    bool m_ContainedXss;
    bool m_ContainedXssIsSet;
    utility::string_t m_OriginalInput;
    bool m_OriginalInputIsSet;
    utility::string_t m_NormalizedResult;
    bool m_NormalizedResultIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_XssProtectionResult_H_ */
