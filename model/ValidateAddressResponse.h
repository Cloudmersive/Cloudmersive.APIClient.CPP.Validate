/**
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.11.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * ValidateAddressResponse.h
 *
 * Result of validating a street address
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_ValidateAddressResponse_H_
#define IO_SWAGGER_CLIENT_MODEL_ValidateAddressResponse_H_


#include "../ModelBase.h"


namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Result of validating a street address
/// </summary>
class  ValidateAddressResponse
    : public ModelBase
{
public:
    ValidateAddressResponse();
    virtual ~ValidateAddressResponse();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ValidateAddressResponse members

    /// <summary>
    /// True if the address is valid, false otherwise
    /// </summary>
    bool isValidAddress() const;
    bool validAddressIsSet() const;
    void unsetValidAddress();
    void setValidAddress(bool value);
    /// <summary>
    /// If the address is valid, the degrees latitude of the validated address, null otherwise
    /// </summary>
    double getLatitude() const;
    bool latitudeIsSet() const;
    void unsetLatitude();
    void setLatitude(double value);
    /// <summary>
    /// If the address is valid, the degrees longitude of the validated address, null otherwise
    /// </summary>
    double getLongitude() const;
    bool longitudeIsSet() const;
    void unsetLongitude();
    void setLongitude(double value);

protected:
    bool m_ValidAddress;
    bool m_ValidAddressIsSet;
    double m_Latitude;
    bool m_LatitudeIsSet;
    double m_Longitude;
    bool m_LongitudeIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_ValidateAddressResponse_H_ */
