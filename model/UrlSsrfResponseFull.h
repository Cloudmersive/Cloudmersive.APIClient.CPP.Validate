/**
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.11.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * UrlSsrfResponseFull.h
 *
 * Result of checking a URL for SSRF threats
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_UrlSsrfResponseFull_H_
#define IO_SWAGGER_CLIENT_MODEL_UrlSsrfResponseFull_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Result of checking a URL for SSRF threats
/// </summary>
class  UrlSsrfResponseFull
    : public ModelBase
{
public:
    UrlSsrfResponseFull();
    virtual ~UrlSsrfResponseFull();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// UrlSsrfResponseFull members

    /// <summary>
    /// True if the URL is clean, false if it is at risk of containing an SSRF threat or attack
    /// </summary>
    bool isCleanURL() const;
    bool cleanURLIsSet() const;
    void unsetCleanURL();
    void setCleanURL(bool value);
    /// <summary>
    /// Threat level of the URL; possible values are High, Medium, Low and None
    /// </summary>
    utility::string_t getThreatLevel() const;
    bool threatLevelIsSet() const;
    void unsetThreatLevel();
    void setThreatLevel(utility::string_t value);

protected:
    bool m_CleanURL;
    bool m_CleanURLIsSet;
    utility::string_t m_ThreatLevel;
    bool m_ThreatLevelIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_UrlSsrfResponseFull_H_ */
