/**
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.5.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * DomainApi.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_API_DomainApi_H_
#define IO_SWAGGER_CLIENT_API_DomainApi_H_


#include "../ApiClient.h"

#include "CheckResponse.h"
#include "ValidateUrlRequestFull.h"
#include "ValidateUrlRequestSyntaxOnly.h"
#include "ValidateUrlResponseFull.h"
#include "ValidateUrlResponseSyntaxOnly.h"
#include "WhoisResponse.h"
#include <cpprest/details/basic_types.h>

#include <boost/optional.hpp>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  DomainApi
{
public:
    DomainApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~DomainApi();
    /// <summary>
    /// Validate a domain name
    /// </summary>
    /// <remarks>
    /// Check whether a domain name is valid or not.  API performs a live validation by contacting DNS services to validate the existence of the domain name.
    /// </remarks>
    /// <param name="domain">Domain name to check, for example \&quot;cloudmersive.com\&quot;.  The input is a string so be sure to enclose it in double-quotes.</param>
    pplx::task<std::shared_ptr<CheckResponse>> domainCheck(
        utility::string_t domain
    );
    /// <summary>
    /// Get WHOIS information for a domain
    /// </summary>
    /// <remarks>
    /// Validate whether a domain name exists, and also return the full WHOIS record for that domain name.  WHOIS records include all the registration details of the domain name, such as information about the domain&#39;s owners.
    /// </remarks>
    /// <param name="domain">Domain name to check, for example \&quot;cloudmersive.com\&quot;.   The input is a string so be sure to enclose it in double-quotes.</param>
    pplx::task<std::shared_ptr<WhoisResponse>> domainPost(
        utility::string_t domain
    );
    /// <summary>
    /// Validate a URL fully
    /// </summary>
    /// <remarks>
    /// Validate whether a URL is syntactically valid (does not check endpoint for validity), whether it exists, and whether the endpoint is up and passes virus scan checks.  Accepts various types of input and produces a well-formed URL as output.
    /// </remarks>
    /// <param name="request">Input URL request</param>
    pplx::task<std::shared_ptr<ValidateUrlResponseFull>> domainUrlFull(
        std::shared_ptr<ValidateUrlRequestFull> request
    );
    /// <summary>
    /// Validate a URL syntactically
    /// </summary>
    /// <remarks>
    /// Validate whether a URL is syntactically valid (does not check endpoint for validity).  Accepts various types of input and produces a well-formed URL as output.
    /// </remarks>
    /// <param name="request">Input URL information</param>
    pplx::task<std::shared_ptr<ValidateUrlResponseSyntaxOnly>> domainUrlSyntaxOnly(
        std::shared_ptr<ValidateUrlRequestSyntaxOnly> request
    );

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_API_DomainApi_H_ */

