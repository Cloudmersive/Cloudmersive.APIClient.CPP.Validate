/**
 * validateapi
 * The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.5.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * EmailApi.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_API_EmailApi_H_
#define IO_SWAGGER_CLIENT_API_EmailApi_H_


#include "../ApiClient.h"

#include "AddressGetServersResponse.h"
#include "AddressVerifySyntaxOnlyResponse.h"
#include "FullEmailValidationResponse.h"
#include <cpprest/details/basic_types.h>

#include <boost/optional.hpp>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  EmailApi
{
public:
    EmailApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~EmailApi();
    /// <summary>
    /// Partially check whether an email address is valid
    /// </summary>
    /// <remarks>
    /// Validate an email address by identifying whether its parent domain has email servers defined.  This call is less limited than syntaxOnly but not as comprehensive as address/full.
    /// </remarks>
    /// <param name="email">Email address to validate, e.g. \&quot;support@cloudmersive.com\&quot;.    The input is a string so be sure to enclose it in double-quotes.</param>
    pplx::task<std::shared_ptr<AddressGetServersResponse>> emailAddressGetServers(
        utility::string_t email
    );
    /// <summary>
    /// Fully validate an email address
    /// </summary>
    /// <remarks>
    /// Performs a full validation of the email address.  Checks for syntactic correctness, identifies the mail server in question if any, and then contacts the email server to validate the existence of the account - without sending any emails.
    /// </remarks>
    /// <param name="email">Email address to validate, e.g. \&quot;support@cloudmersive.com\&quot;.    The input is a string so be sure to enclose it in double-quotes.</param>
    pplx::task<std::shared_ptr<FullEmailValidationResponse>> emailFullValidation(
        utility::string_t email
    );
    /// <summary>
    /// Validate email adddress for syntactic correctness only
    /// </summary>
    /// <remarks>
    /// Validate whether a given email address is syntactically correct via a limited local-only check.  Use the address/full API to do a full validation.
    /// </remarks>
    /// <param name="value">Email address to validate, e.g. \&quot;support@cloudmersive.com\&quot;.    The input is a string so be sure to enclose it in double-quotes.</param>
    pplx::task<std::shared_ptr<AddressVerifySyntaxOnlyResponse>> emailPost(
        utility::string_t value
    );

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_API_EmailApi_H_ */

